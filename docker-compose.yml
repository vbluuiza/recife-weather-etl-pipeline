# docker-compose.yml (Versão Final e Segura para Airflow)

# A tag 'version' é obsoleta e não é mais necessária nos arquivos Docker Compose modernos.

x-airflow-common: &airflow-common
  # Define uma configuração base para ser reutilizada nos serviços do Airflow.
  image: apache/airflow:2.9.1
  env_file:
    - .env
  volumes:
    # Mapeia as pastas locais para dentro do container.
    # Isso permite que o Airflow acesse suas DAGs e scripts.
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./src:/opt/airflow/src
    - ./config:/opt/airflow/config
    - ./data:/opt/airflow/data
    # Opcional: Necessário apenas se você usar o DockerOperator.
    - /var/run/docker.sock:/var/run/docker.sock
  # ATENÇÃO: Executa o container como um usuário não-root por segurança.
  # O usuário/grupo com ID 50000 no seu computador DEVE ter permissão de leitura
  # nas pastas mapeadas (dags, src, config, etc.).
  # Este é um ponto comum de erros de "Arquivo não encontrado".
  user: "50000:0"
  networks:
    - airflow-network

services:
  # Banco de dados para os metadados do Airflow (informações sobre DAGs, execuções, etc.)
  postgres-airflow:
    image: postgres:16
    container_name: airflow_postgres_metadata
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-airflow}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-airflow}
      - POSTGRES_DB=${POSTGRES_DB:-airflow}
    ports:
      # Expõe a porta do banco de metadados em 5433 para evitar conflito.
      - "5433:5432"
    volumes:
      - airflow-pgdata:/var/lib/postgresql/data
    networks:
      - airflow-network

  # Banco de dados separado para os dados do seu pipeline ETL.
  postgres-etl:
    image: postgres:16
    container_name: recife_postgres_etl
    env_file:
      - .env
    ports:
      # Expõe a porta do banco de ETL em 5432.
      - "5432:5432"
    volumes:
      - etl-pgdata:/var/lib/postgresql/data
      # Removido: Mapear 'src' e 'config' aqui era redundante e desnecessário.
    networks:
      - airflow-network

  # Scheduler - O cérebro do Airflow, responsável por agendar e disparar as tarefas.
  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow_scheduler
    depends_on:
      - postgres-airflow
    command: scheduler

  # Webserver - A interface de usuário do Airflow que você acessa no navegador.
  airflow-webserver:
    <<: *airflow-common
    container_name: airflow_webserver
    depends_on:
      - airflow-scheduler
    ports:
      - "8080:8080"
    command: webserver

  # Serviço de inicialização - Executa uma única vez para preparar o ambiente.
  airflow-init:
    <<: *airflow-common
    container_name: airflow_init
    depends_on:
      - postgres-airflow
    entrypoint: /bin/bash
    command:
      - -c
      - |
        airflow db init &&
        airflow users create \
          --username "${_AIRFLOW_WWW_USER_USERNAME:-admin}" \
          --firstname "Admin" \
          --lastname "User" \
          --role "Admin" \
          --email "admin@example.com" \
          --password "${_AIRFLOW_WWW_USER_PASSWORD:-admin}"

networks:
  airflow-network:
    name: airflow-network

volumes:
  # Volumes nomeados para persistir os dados dos bancos de dados.
  airflow-pgdata:
  etl-pgdata:
